TARGET = retro-go-gb

DEBUG = 1
#OPT = -Og -ggdb
OPT = -O0 -ggdb3 -fsanitize=address

BUILD_DIR = build


C_SOURCES =  \
gb/main.c \
../Core/Src/porting/lib/lzma/LzmaDec.c \
../Core/Src/porting/lib/lzma/lzma.c \
odroid_input.c \
odroid_netplay.c \
odroid_overlay.c \
odroid_sdcard.c \
odroid_system.c \
odroid_display.c \
odroid_audio.c \
gw_lcd.c \
loaded_gb_rom.c \
crc32.c \
porting.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_cpu.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_debug.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_emu.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_hw.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_lcd.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_loader.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_mem.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_rtc.c \
../retro-go-stm32/gnuboy-go/components/gnuboy/gnuboy_sound.c \


PREFIX = 

CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size

HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

C_DEFS =  \
-DIS_LITTLE_ENDIAN

C_INCLUDES =  \
-I. \
-I./gb \
-I../Core/Src/porting/lib \
-I../Core/Src/porting/lib/lzma \
-I../retro-go-stm32/gnuboy-go/components \
-I../retro-go-stm32/components/odroid \
-I../retro-go-stm32/components/lupng


ASFLAGS = $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections
CFLAGS  = $(C_DEFS) $(C_INCLUDES) `sdl2-config --cflags` $(OPT) -Wall -fdata-sections -ffunction-sections
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#LIBS = -lm `sdl2-config --libs`
LIBS = -lasan -lm `sdl2-config --libs`
LDFLAGS = $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

all: $(BUILD_DIR)/$(TARGET).elf

OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))


$(BUILD_DIR)/%.o: %.c Makefile.gb | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile.gb
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR):
	mkdir $@

clean:
	-rm -fR $(BUILD_DIR)

-include $(wildcard $(BUILD_DIR)/*.d)
